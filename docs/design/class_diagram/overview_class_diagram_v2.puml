@startuml

class Robot {
    - size: robot_size {small, large}
    - Status: status {Idle, Active Fault}
    + clean(location_name)
}

interface Sweeper {
    + sweep(location_name)
}

interface Vacuum {
    + vacuum(location_name)
}

interface Mopper {
    + mop(location_name)
}

class Location {
    - location_name: string
    - size: room_size {small, median, large}
}

class UserInterface {
  + checkBrokenRobot()
  + popBrokenRobot(robot_id)
  + requestCleaning(room_id, cleaning_type)
}

class RobotManagementSystem {
  - robotsMap: std::unordered_map<std::string, Place::place>
  - robotsBrokenMap: std::unordered_map<std::string, Place::place>
  + checkBrokenRobot(): std::string
  + requestCleaning(room_id, cleaning_type): std::string
}



Robot --> Sweeper
Robot --> Vacuum
Robot --> Mopper

UserInterface *--* RobotManagementSystem: uses
RobotManagementSystem *--* Robot : contains
@enduml