@startuml
left to right direction
class Robot {
// Status includes {idle active fault}
    +Status: int
}

class SmallRobot {
    +Status
}

class LargeRobot {
    +Status
}

interface Sweeper {
    +sweep()
}

interface Vacuum {
    +vacuum()
}

interface Mapper {
    +map()
}

class Room {
    - name: std::string
    - size: RoomSize
    + getName(): std::string
    + getSize(): RoomSize
}

enum RoomSize {
  Small 
  Medium
  Large 
}

' class Room {
'     - size: room_size {small, median, large}
'     + room_name: string
'     + getName(): std::string
'     + getSize(): std::string
' }

' class SmallRoom {
'     +Size: 0
' }
' class MedianRoom {
'     +Size: 1
' }
' class LargeRoom {
'     +Size: 2
' }

class Interface {
  + checkBrokenRobot()
  + popBrokenRobot(robot_id)
  + requestCleaning(room_id, cleaning_type)
}

class RobotManagementSystem {
  - robotsMap: std::unordered_map<std::string, Place::place>
  - robotsBrokenMap: std::unordered_map<std::string, Place::place>
  + checkBrokenRobot(): std::string
  + requestCleaning(room_id, cleaning_type): std::string
}


Robot <|-- SmallRobot
Robot <|-- LargeRobot

SmallRobot --> Sweeper
SmallRobot --> Vacuum
SmallRobot --> Mapper

LargeRobot --> Sweeper
LargeRobot --> Vacuum
LargeRobot --> Mapper

Room --> RoomSize
RobotManagementSystem *--* Robot : contains
@enduml